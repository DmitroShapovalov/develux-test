const {    getPackageJson,    getBranchHash,    createNewBranch,    openPullRequest,    uploadDependenciesFile} = require("./api-service");const packageName = 'rxjs';const packageVersion = '7.7.2';const branchName = 'master';const repoSlug = 'd-shapovalov/test-data';const apiToken = 'Bearer ATCTT3xFfGN0oCtgRVYaatp1wLMyGGiU1KAb--7Rdeps1yi2kvk5G6vuBJ_2N0nz84AzVNYXGvnTZlmSLcd_op5xNMbmcZFwVP8ohoPSh8vLWJKuOCn2UEk-x5WOPWCeSDOO_C_yaqjBcAtxcFnFfvUs4Pg3VAHKO3fGy6gZ-Q-HcYLrF_ZKEfk=313C5F36';async function main(packageName, packageVersion, currentBranchName) {    // Get the package.json file from the repository    const packageJsonFile = await getPackageJson(packageName, packageVersion, repoSlug, apiToken);    // Update the package version    packageJsonFile.dependencies[packageName] = packageVersion;    // Convert the updated package.json to a string    const updatedPackageJsonString = JSON.stringify(packageJsonFile, null, 2);    const currentBranchHash = await getBranchHash(currentBranchName, repoSlug, apiToken);    //Create a new branch for the pull request    const newBranchName = `update-${packageName}-to-${packageVersion}`;    await createNewBranch(newBranchName, currentBranchHash, repoSlug, apiToken);    //Commit changes in dependencies file to the new branch    const commitMessage = `Update ${packageName} to ${packageVersion}`;    await uploadDependenciesFile(commitMessage, updatedPackageJsonString, newBranchName, repoSlug, apiToken );    // Create the pull request    await openPullRequest(packageName, packageVersion, currentBranchName, newBranchName, repoSlug, apiToken);    console.log(`Pull request for updating ${packageName} to ${packageVersion} created`);}main(packageName, packageVersion, branchName).then();