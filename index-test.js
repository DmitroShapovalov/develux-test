// Import the necessary modulesconst axios = require('axios');const FormData = require('form-data');const fs = require('fs');// Define the repository information and credentialsconst repoSlug = 'owner-name/repo-name';const auth = {    username: 'your-username',    password: 'your-password'};// Define the function to update the package.json file in the repositoryasync function updatePackageJson(packageName, packageVersion) {    // Get the package.json file from the repository    const packageJsonUrl = `https://api.bitbucket.org/2.0/repositories/${repoSlug}/src/master/package.json`;    const packageJsonResponse = await axios.get(packageJsonUrl, { auth });    // Parse the package.json contents    const packageJson = JSON.parse(packageJsonResponse.data);    // Update the package version    packageJson.dependencies[packageName] = packageVersion;    // Convert the updated package.json to a string    const updatedPackageJsonString = JSON.stringify(packageJson, null, 2);    // Upload the updated package.json to the repository    const form = new FormData();    form.append('message', `Update ${packageName} to ${packageVersion}`);    form.append('content', updatedPackageJsonString);    const uploadUrl = `https://api.bitbucket.org/2.0/repositories/${repoSlug}/src`;    await axios.post(uploadUrl, form, {        headers: form.getHeaders(),        auth    });}// Define the function to open a pull requestasync function openPullRequest(packageName, packageVersion) {    // Get the branch information    const branchUrl = `https://api.bitbucket.org/2.0/repositories/${repoSlug}/refs/branches/master`;    const branchResponse = await axios.get(branchUrl, { auth });    const branchHash = branchResponse.data.target.hash;    // Create a new branch for the pull request    const newBranchName = `update-${packageName}-to-${packageVersion}`;    const newBranchUrl = `https://api.bitbucket.org/2.0/repositories/${repoSlug}/refs/branches`;    const newBranchResponse = await axios.post(newBranchUrl, {        name: newBranchName,        target: {            hash: branchHash        }    }, { auth });    // Get the commit hash for the new branch    const newBranchHash = newBranchResponse.data.target.hash;    // Create the pull request    const pullRequestUrl = `https://api.bitbucket.org/2.0/repositories/${repoSlug}/pullrequests`;    const pullRequestBody = {        title: `Update ${packageName} to ${packageVersion}`,        source: {            branch: {                name: newBranchName            }        },        destination: {            branch: {                name: 'master'            }        },        description: `Update the ${packageName} dependency to version ${packageVersion}`    };    await axios.post(pullRequestUrl, pullRequestBody, { auth });    console.log(`Pull request for updating ${packageName} to ${packageVersion} created`);}// Define the main function that updates the package.json and opens a pull requestasync function updatePackageAndCreatePullRequest(packageName, packageVersion) {    await updatePackageJson(packageName, packageVersion);    await openPullRequest(packageName, packageVersion);}// Call the main function with the package name and version