const {    getPackageJson,    getBranchHash,    createNewBranch,    openPullRequest,    uploadDependenciesFile} = require("./api-service");const config = {    apiToken: process.env.API_TOKEN,    repoSlug: process.env.REPO_SLUG,    packageName: process.env.PACKAGE_NAME,    packageVersion: process.env.PACKAGE_VERSION || 'latest',    branchName: process.env.BRANCH_NAME || 'master',}async function main(config) {    const {        repoSlug,        packageName,        packageVersion,        branchName,        apiToken,    } = config;    // Get the package.json file from the repository    const packageJsonFile = await getPackageJson(packageName, packageVersion, repoSlug, apiToken);    // Update the package version    packageJsonFile.dependencies[packageName] = packageVersion;    // Convert the updated package.json to a string    const updatedPackageJsonString = JSON.stringify(packageJsonFile, null, 2);    const currentBranchHash = await getBranchHash(branchName, repoSlug, apiToken);    //Create a new branch for the pull request    const newBranchName = `update-${packageName}-to-${packageVersion}`;    await createNewBranch(newBranchName, currentBranchHash, repoSlug, apiToken);    //Commit changes in dependencies file to the new branch    const commitMessage = `Update ${packageName} to ${packageVersion}`;    await uploadDependenciesFile(commitMessage, updatedPackageJsonString, newBranchName, repoSlug, apiToken );    // Create the pull request    await openPullRequest(packageName, packageVersion, branchName, newBranchName, repoSlug, apiToken);    console.log(`Pull request for updating ${packageName} to ${packageVersion} created`);}main(config).then();